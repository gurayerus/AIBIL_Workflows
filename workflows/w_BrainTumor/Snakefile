## Flag to indicate rules that will be run locally (e.g. not submitted to slurm)
localrules: reorient_dti_img, reorient_img, to_t1ce_applymat, to_sri_applymat, select_mask, apply_mask, zscore_img, 
    
### Report data
#report: "report/workflow.rst"

## Config file
configfile: "../../config/config_BrainTumor.yaml"

###################################
## Out file names

OUT_CONFIG = expand("../../data/{dir_output}/config/{cname}", cname = ["config_MUSE_3D.yaml"], dir_output = config["dir_output"])

## FIXME: added for demo purposes
LIST_MRID = ['AAAA_2006.12.27']
LIST_MRID = ['AAAA_2007.01.21']
LIST_MRID = ['AAAA_2007.01.21', 'AAAB_2006.10.28']

OUT_RESULTS = expand("../../data/BrainTumor/BrainTumor_vtest1/Study1/Protocols/TumorSusanFiltered/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm_tumor_n4_susan.nii.gz", mrid = LIST_MRID)

OUT_FILES = OUT_CONFIG + OUT_RESULTS

#print("Target out files:" + '\n' + '\n'.join(OUT_FILES) + '\n')
#input()

###################################
## Rules

rule ALL:
    '''
    First rule: lists the final expected out files
    '''
    input: OUT_FILES

rule copy_config:
    '''
    Rule for copying config files to output dir
    '''
    input:
        "../../config/{cname}"
    output:
        expand("../../data/{dir_output}/config/{{cname}}", dir_output = config["dir_output"])
    shell:
        "cp -v {input} {output}"


ruleorder: reorient_dti_img > reorient_img
    
rule reorient_dti_img:
    """
    Reorient a DTI image to LPS orientation
    This is done in a limited way only for LAS images, by modifying the bvec file
    """
    input:
        dti=expand("../../data/{dir_input}/{{study}}/RenamedNifti/{{mrid}}/{{mrid}}_dti.nii.gz", dir_input = config["dir_input"]),
        bval=expand("../../data/{dir_input}/{{study}}/RenamedNifti/{{mrid}}/{{mrid}}_dti.bval", dir_input = config["dir_input"]),
        bvec=expand("../../data/{dir_input}/{{study}}/RenamedNifti/{{mrid}}/{{mrid}}_dti.bvec", dir_input = config["dir_input"]),
    output:
        dti="../../data/{dir_output}/{study}/Protocols/ReorientedLPS/{mrid}/{mrid}_dti_lps.nii.gz",
        bval="../../data/{dir_output}/{study}/Protocols/ReorientedLPS/{mrid}/{mrid}_dti_lps.bval",
        bvec="../../data/{dir_output}/{study}/Protocols/ReorientedLPS/{mrid}/{mrid}_dti_lps.bvec"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/reorient_dti_to_LPS.sh {input.dti} {output.dti} RAI"

rule reorient_img:
    """
    Reorient a 3D image to LPS orientation
    """
    input:
        expand("../../data/{dir_input}/{{study}}/RenamedNifti/{{mrid}}/{{mrid}}_{{mod}}.nii.gz", dir_input = config["dir_input"]),
    output:
        "../../data/{dir_output}/{study}/Protocols/ReorientedLPS/{mrid}/{mrid}_{mod}_lps.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/reorient_to_LPS.sh {input} {output} RAI"

rule run_n4:
    """
    N4 bias correction
    """
    input:
        "../../data/{dir_output}/{study}/Protocols/ReorientedLPS/{mrid}/{mrid}_{mod}_lps.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/BiasCorrected/{mrid}/{mrid}_{mod}_lps_n4.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/biascorr_n4.sh {input} {output}"
        
rule to_t1ce_calcmat:
    """
    Calculate matrix to align image to t1ce image (within subjects)
    Matrix is calculated independently for different modalities
    """
    input:
        img="../../data/{dir_output}/{study}/Protocols/BiasCorrected/{mrid}/{mrid}_{mod}_lps_n4.nii.gz",
        ref="../../data/{dir_output}/{study}/Protocols/BiasCorrected/{mrid}/{mrid}_t1ce_lps_n4.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/AlignedToT1CE/{mrid}/{mrid}_{mod}_lps_n4_rt1ce.mat"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/register_calcmat.sh {input.img} {input.ref} {output}"

rule to_t1ce_applymat:
    """
    Apply matrix to align image to t1ce image (within subjects)
    """
    input:
        img="../../data/{dir_output}/{study}/Protocols/BiasCorrected/{mrid}/{mrid}_{mod}_lps_n4.nii.gz",
        ref="../../data/{dir_output}/{study}/Protocols/BiasCorrected/{mrid}/{mrid}_t1ce_lps_n4.nii.gz",
        mat="../../data/{dir_output}/{study}/Protocols/AlignedToT1CE/{mrid}/{mrid}_{mod}_lps_n4_rt1ce.mat"
    output:
        "../../data/{dir_output}/{study}/Protocols/AlignedToT1CE/{mrid}/{mrid}_{mod}_lps_n4_rt1ce.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/register_applymat.sh {input.img} {input.ref} {input.mat} {output}"
        
rule to_sri_calcmat:
    """
    Calculate matrix to align image to sri image (between subjects)
    A single matrix is calculated only using the T1 modality
    """
    input:
        img="../../data/{dir_output}/{study}/Protocols/AlignedToT1CE/{mrid}/{mrid}_t1_lps_n4_rt1ce.nii.gz",
        ref="../../resources/templates/spgr_unstrip-RAI.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri.mat"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/register_calcmat.sh {input.img} {input.ref} {output}"

rule to_sri_applymat:
    """
    Apply matrix to align images to SRI image (between subjects)
    All modalities use the same matrix from T1 registration to SRI
    """
    input:
        img="../../data/{dir_output}/{study}/Protocols/AlignedToT1CE/{mrid}/{mrid}_{mod}_lps_n4_rt1ce.nii.gz",
        ref="../../resources/templates/spgr_unstrip-RAI.nii.gz",
        mat="../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri.mat"
    output:
        "../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/register_applymat.sh {input.img} {input.ref} {input.mat} {output}"

rule run_dm_mask:
    """
    Calculate deep_medic mask
    """
    input:
        t1="../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri.nii.gz",
        t1ce="../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_t1ce_lps_n4_rt1ce_rsri.nii.gz",
        t2="../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_t2_lps_n4_rt1ce_rsri.nii.gz",
        fl="../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_flair_lps_n4_rt1ce_rsri.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/BrainMaskDeepMedic/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri_maskDM.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/maskbrain_deepmedic.sh {input.t1} {input.t1ce} {input.t2} {input.fl} {output}"
 
rule run_ma_mask: 
    """
    Calculate brain_mage mask
    FIXME: this step failed for me due to dependencies, so it's not used in later mask selection step for now
    """
    input:
        "../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/BrainMaskBrainMAGE/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri_maskMA.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/maskbrain_brainmage.sh {input} {output}"
 
rule select_mask:
    """
    Rule to select between two brain masks
    FIXME: THIS STEP IS NORMALLY DONE MANUALLY (for now the script just selects the first input as the output mask)
    """
    input:
        m1="../../data/{dir_output}/{study}/Protocols/BrainMaskDeepMedic/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri_maskDM.nii.gz",
        #m2="../../data/{dir_output}/{study}/Protocols/BrainMaskBrainMAGE/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri_maskMA.nii.gz",
        #m3="../../data/{dir_output}/{study}/Protocols/BrainMaskBrainMAGE/{mrid}/{mrid}_t1ce_lps_n4_rt1ce_rsri_maskMA.nii.gz"        
    output:
        "../../data/{dir_output}/{study}/Protocols/BrainMaskFinal/{mrid}/{mrid}_brainmask.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        #"bash ./utils/sel_brainmask.sh {input.m1} {input.m2} {input.m3} {output}"
        "bash ./utils/select_brainmask.sh {input.m1} {output}"
 
rule apply_mask:
    """
    Apply brain mask to images
    """
    input:
        img="../../data/{dir_output}/{study}/Protocols/AlignedToAtlas/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri.nii.gz",
        mask="../../data/{dir_output}/{study}/Protocols/BrainMaskFinal/{mrid}/{mrid}_brainmask.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/BrainMaskFinal/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri_brain.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/apply_brainmask.sh {input.img} {input.mask} {output}"

rule zscore_img: 
    """
    Normalize images usinf z-score transform
    """
    input:
        "../../data/{dir_output}/{study}/Protocols/BrainMaskFinal/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri_brain.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/NormalizedImages/{mrid}/{mrid}_{mod}_lps_n4_rt1ce_rsri_brain_zscore.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/normalize_zscore.sh {input} {output}"
 
rule dm_seg:
    """
    Apply deep_medic segmentation
    FIXME: this step failed for me due to dependencies
    """
    input:
        t1="../../data/{dir_output}/{study}/Protocols/NormalizedImages/{mrid}/{mrid}_t1_lps_n4_rt1ce_rsri_brain_zscore.nii.gz",
        t1ce="../../data/{dir_output}/{study}/Protocols/NormalizedImages/{mrid}/{mrid}_t1ce_lps_n4_rt1ce_rsri_brain_zscore.nii.gz",
        t2="../../data/{dir_output}/{study}/Protocols/NormalizedImages/{mrid}/{mrid}_t2_lps_n4_rt1ce_rsri_brain_zscore.nii.gz",
        fl="../../data/{dir_output}/{study}/Protocols/NormalizedImages/{mrid}/{mrid}_flair_lps_n4_rt1ce_rsri_brain_zscore.nii.gz",
    output:
        "../../data/{dir_output}/{study}/Protocols/SegmentedDeepMedic/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/segment_deepmedic.sh {input} {output}"
        
rule mask_tumor:
    """
    Mask tumor
    FIXME: this is a placeholder for now, not implemented yet
    """
    input:
        "../../data/{dir_output}/{study}/Protocols/SegmentedDeepMedic/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/SegmentedTumor/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm_tumor.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/mask_tumor.sh {input} {output}"

rule n4_tumor:
    """
    Mask tumor
    FIXME: this is a placeholder for now, not implemented yet
    """
    input:
        "../../data/{dir_output}/{study}/Protocols/SegmentedTumor/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm_tumor.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/TumorBiasCorrected/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm_tumor_n4.nii.gz"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/biascorr_n4.sh {input} {output}"

rule run_susan:
    """
    Mask tumor
    FIXME: this is a placeholder for now, not implemented yet
    """
    input:
        "../../data/{dir_output}/{study}/Protocols/TumorBiasCorrected/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm_tumor_n4.nii.gz"
    output:
        "../../data/{dir_output}/{study}/Protocols/TumorSusanFiltered/{mrid}/{mrid}_lps_n4_rt1ce_rsri_brain_zscore_segmdm_tumor_n4_susan.nii.gz"
        
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/susan.sh {input} {output}"
